{"ast":null,"code":"var _jsxFileName = \"D:\\\\2022\\\\mern-notes-app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n//import logo from './logo.svg';\nimport { useState } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Notes from './pages/Notes'; //import PublicRoute from './components/PublicRoute';\n//import ProtectedRoutes from './components/ProtectedRoutes';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const checkLogin = async () => {\n      const token = localStorage.getItem('tokenStore');\n\n      if (token) {\n        const verified = await axios.get('/users/verify', {\n          headers: {}\n        });\n      } else {\n        setIsLoading(false);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Notes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      setIsLoading: setIsLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"DlrQjwOD5XS1kcZJvMHoaf7KaZ8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","BrowserRouter","Routes","Route","Login","Notes","App","isLoading","setIsLoading","useEffect","checkLogin","token","localStorage","getItem","verified","axios","get","headers"],"sources":["D:/2022/mern-notes-app/client/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\n\nimport { useState } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nimport Login from './pages/Login';\nimport Notes from './pages/Notes';\n\n//import PublicRoute from './components/PublicRoute';\n//import ProtectedRoutes from './components/ProtectedRoutes';\n\nfunction App() {\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst checkLogin = async () => {\n\t\t\tconst token = localStorage.getItem('tokenStore');\n\n\t\t\tif (token) {\n\t\t\t\tconst verified = await axios.get('/users/verify',{\n\t\t\t\t\theaders:{\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t{isLoading ? <Notes /> : <Login setIsLoading={setIsLoading} />}\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AAEA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB,C,CAEA;AACA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACd,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;EAEAS,SAAS,CAAC,MAAM;IACf,MAAMC,UAAU,GAAG,YAAY;MAC9B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAd;;MAEA,IAAIF,KAAJ,EAAW;QACV,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,eAAV,EAA0B;UAChDC,OAAO,EAAC;QADwC,CAA1B,CAAvB;MAKA,CAND,MAMO;QACNT,YAAY,CAAC,KAAD,CAAZ;MACA;IACD,CAZD;EAaA,CAdQ,EAcN,EAdM,CAAT;EAgBA,oBACC;IAAA,UACED,SAAS,gBAAG,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QAAH,gBAAe,QAAC,KAAD;MAAO,YAAY,EAAEC;IAArB;MAAA;MAAA;MAAA;IAAA;EAD1B;IAAA;IAAA;IAAA;EAAA,QADD;AAKA;;GAxBQF,G;;KAAAA,G;AA0BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}